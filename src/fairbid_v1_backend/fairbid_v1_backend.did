type Item = record {
    title: text;
    description: text;
};

type Bid = record {
    price: nat64;
    time: nat64;
    originator: principal;
};

type Auction = record {
    id: nat64;
    item: Item;
    bid_history: vec nat64;
    end_time: nat64;
    remaining_time: nat64;
    starting_price: opt nat64;
    originator: principal;
    contact: text;
    location: text;
};

type AuctionDetails = record {
    item: Item;
    bid_history: vec Bid;
    end_time: nat64;
    starting_price: opt nat64;
    originator: principal;
    contact: text;
    location: text;
};


type AuctionId = nat64;

type AuctionOverview = record {
    id: AuctionId;
    item: Item;
};

type ItemDetails = record {
    item: Item;
    image: vec nat8;
};

type Conversation = record {
    question: text;
    answer: text;
    is_private: bool;
    originator: principal;
};



service : {
    new_auction: (item: Item, price: nat64, duration: nat64, contact: text, location: text, image: vec nat8) -> ();
    make_bid: (id: AuctionId, price: nat64) -> (result: variant { Ok: null; Err: text });
    end_auction: (nat64) -> (result: variant { Ok: null; Err: text });
    get_auction: (id: nat64) -> (opt Auction) query;
    get_auction_details: (id: AuctionId) -> (opt AuctionDetails) query;
    get_active_auctions: () -> (vec AuctionOverview) query;
    get_ended_auctions: () -> (vec AuctionOverview) query;
    get_all_auctions: () -> (vec AuctionOverview) query;
    get_all_bids: (id: AuctionId) -> (vec Bid) query;
    get_highest_bidder: (id: AuctionId) -> (opt principal) query;
    get_highest_bid_details: (id: AuctionId) -> (opt Bid) query;
    get_remaining_time: (id: AuctionId) -> (opt nat64) query;
    get_qr_code: (string: text) -> (vec nat8);
    get_auction_originator: (id: AuctionId) -> (opt principal) query;
    get_all_auctions_by_originator: () -> (vec AuctionOverview) query;

    get_item_image: (id: AuctionId) -> ( vec nat8) query;

    ask_question: (id: AuctionId, question: text) -> ();
    answer_question: (id: AuctionId, answer: text) -> ();
    answer_question_private: (id: AuctionId, answer: text) -> ();
    delete_question: (id: AuctionId) -> ();
    get_questions: (id: AuctionId) -> (vec Conversation) query;
    get_question: (id: AuctionId) -> (opt Conversation) query;

    get_question_ids_by_auction_id: (id: AuctionId) -> (vec AuctionId) query;
    get_questions_by_ids: (ids: vec AuctionId) -> (vec Conversation) query;

    random_number: () -> (nat64);
    assign_buy_code: (id: AuctionId) -> ();
    get_buy_code: (id: AuctionId) -> (nat64) query;

    who_am_i: () -> (principal) query;
};

